apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "resource.default.name"  . }}
  namespace: {{ include "resource.default.namespace"  . }}
  labels:
    {{- include "labels.common" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "labels.selector" . | nindent 6 }}
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        {{- include "labels.selector" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "resource.default.name"  . }}
      securityContext:
        runAsNonRoot: true
        runAsUser: {{ .Values.pod.user.id }}
        runAsGroup: {{ .Values.pod.group.id }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        command:
        - /manager
        args:
        - --leader-elect
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
        volumeMounts:
        - mountPath: {{ .Values.pod.credentials.dir }}
          name: {{ .Values.pod.credentials.filename }}
        env:
        - name: AWS_SHARED_CREDENTIALS_FILE
          value: {{ .Values.pod.credentials.dir }}/{{ .Values.pod.credentials.filename }}
        - name: AWS_REGION
          value: "{{ .Values.aws.region }}"
        - name: AWS_DEFAULT_REGION
          value: "{{ .Values.aws.region }}"
      terminationGracePeriodSeconds: 10
      volumes:
      - name: {{ .Values.pod.credentials.filename }}
        secret:
          secretName: {{ include "resource.default.name" . }}-aws-credentials
